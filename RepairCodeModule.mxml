<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:ns1="Panels.*" creationComplete="init()">
    <mx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            import mx.events.*;
            import mx.controls.Alert;
            import com.metrobg.Icons.Images;
            import com.metrobg.Classes.NumberUtilities;
            import mx.rpc.http.HTTPService;

            [Bindable]
            public var myAC:ArrayCollection = new ArrayCollection;

            [Bindable]
            public var mode:String = 'update';

            [Bindable]
            private var random:Number;

            private var newKey:Number;

            private var activeRecord:Number;

            private var returnCode:Number;

            private function init():void
            {
                this.moveToFront();
            }

            private function getResultOk(r:Number, event:Event):void
            {
                switch (r)
                {
                    case 1:
                        myAC = getCodes.lastResult.codeList.record;
                        resultGrid.dataProvider = myAC;
                        break;
                    case 2:
                        returnCode = updateRepairCode.lastResult.root.status;
                        if (Number(returnCode) == 2)
                        {
                            Alert.show("Problem updating Record", "Error", 3, this, null, Images.WarningIcon);
                        }
                        else
                        {
                            getCodes.send();
                        }
                        break;
                    case 3:
                        returnCode = addRepairCode.lastResult.root.status;
                        if (Number(returnCode) == 2)
                        {
                            Alert.show("Problem adding record", "Error");
                        }
                        else
                        {
                            /*  var itemObj:Object = new Object;
                               itemObj = {id:addRepairCode.lastResult.root.id,
                               code:addRepairCode.lastResult.root.code,
                               description:addRepairCode.lastResult.root.description,
                             price:addRepairCode.lastResult.root.price} */ //addItemToGrid(itemObj);
                            addItemToGrid(addRepairCode.lastResult.root);
                            Alert.show("Record Added", "Success", Alert.OK, this, null, Images.OKIcon);
                        }
                        break;
                    case 4:
                        returnCode = deleteRepairCode.lastResult.root.status;
                        if (Number(returnCode) == 2)
                        {
                            Alert.show("Problem deleting Record", "Error", Alert.OK, this, null, Images.WarningIcon);
                        }
                        else
                        {
                            Alert.show("Record Deleted", "Success", Alert.OK, this, null, Images.OKIcon);
                            getCodes.send();
                        }
                        break;
                    case 999:
                        Alert.show("Unknown Error", "Attention", Alert.OK, this, null, Images.StopIcon);
                        break;
                }
            }

            private function gridItemSelected(event:ListEvent):void
            {
                activeRecord = event.rowIndex - 1;
                mode = 'update';
                delete_btn.enabled = true;
            }

            private function dataGridCurrencyFormat(item:Object, column:Object):String
            {
                return cf.format(item[column.dataField]);
            }

            private function buttonHandler(value:String):void
            {
                if (value == 'delete')
                    mode = 'delete';
                switch (mode)
                {
                    case "update":
                        updateRepairCode.send();
                        currentState = '';
                        break;
                    case 'add':
                        if (price_fld.text == '')
                        {
                            price_fld.text = "0.00";
                        }
                        if (code_fld.text != '' && description_ta.text != '')
                        {
                            addRepairCode.send();
                        }
                        else
                        {
                            Alert.show("Blank fields not allowed", "Error", 0, this, null, Images.StopIcon);
                        }
                        break;
                    case 'delete':
                        deleteCode();
                        break;
                }
            }

            private function alertClickHandler(event:CloseEvent):void
            {
                if (event.detail == Alert.YES)
                {
                    deleteRepairCode.send();
                }
            }

            private function addRecord():void
            {
                code_fld.text = '';
                description_ta.text = '';
                price_fld.text = '';
                mode = 'add';
                delete_btn.enabled = false;
            }

            private function addItemToGrid(obj:Object):void
            {
                myAC.addItemAt(obj, 0);
                resultGrid.dataProvider = myAC;
                myAC.refresh();
            }

            private function removeItemFromGrid(position:Number):void
            {
                myAC.removeItemAt(position);
                resultGrid.dataProvider = myAC;
                myAC.refresh();
            }

            private function deleteCode():void
            {
                mode = 'delete';
                //   Alert.show("Delete Code " + code_fld.text.toUpperCase(), "Really Delete", 3, this, alertClickHandler);
                Alert.show("Delete Code " + code_fld.text.toUpperCase(), "Really Delete", 3, this, alertClickHandler, Images.WarningIcon);
            }

            private function closeThisModule():void
            {
                parentApplication.removeModule(this.owner.name);
            }

            private function runReport():void
            {
                var Options:URLVariables = new URLVariables();
                var request:URLRequest = new URLRequest(parentApplication.ReportRunnerURL);
                Options.output = "PDF";
                Options.FROM = "01-JAN-2010";
                Options.TO = "01-JAN-2010";
                Options.template = "HMI/" + "HMIRepairCodeReport";
                Options.ORDERBY = "";
                Options.DIR = "";
                Options.STATE = "";
                Options.CATEGORY = "";
                Options.TAX = "";
                request.method = "POST";
                request.data = Options;
                trace("url " + request.data.toString());
                navigateToURL(request);
            }

            private function moveToFront():void
            {
                // move the shape to the front by moving it to the front-most
                // index (which is always numChildren - 1)
                if (this)
                    if (this.owner)
                        if (this.owner.name)
                            if (parentApplication)
                                parentApplication.setChildIndex(parentApplication.getChildByName(this.owner.name), parentApplication.numChildren - 1);
            }
        ]]>
    </mx:Script>
    <mx:NumberFormatter precision="2" id="nf" />
    <mx:CurrencyFormatter id="cf" precision="2" />
    <mx:HTTPService id="getCodes" url="http://www.heritagemfg.com/console/flex/queries/getCodes.cfm" useProxy="false" showBusyCursor="true"
                    result="getResultOk(1,event)">
        <mx:request>
            <random>{parentDocument.makeRandom()}</random>
        </mx:request>
    </mx:HTTPService>
    <mx:HTTPService id="addRepairCode" url="http://www.heritagemfg.com/console/flex/queries/updateRepairCode.cfm" useProxy="false" showBusyCursor="true"
                    result="getResultOk(3,event)">
        <mx:request>
            <mode>{mode}</mode>
            <code>{code_fld.text}</code>
            <description>{description_ta.text}</description>
            <price>{price_fld.text}</price>
            <random>{parentDocument.makeRandom()}</random>
        </mx:request>
    </mx:HTTPService>
    <mx:HTTPService id="deleteRepairCode" url="http://www.heritagemfg.com/console/flex/queries/updateRepairCode.cfm" useProxy="false" showBusyCursor="true"
                    result="getResultOk(4,event)" fault="getResultOk(999,event)">
        <mx:request>
            <mode>{mode}</mode>
            <id>{resultGrid.selectedItem.id}</id>
            <random>{parentDocument.makeRandom()}</random>
        </mx:request>
    </mx:HTTPService>
    <mx:HTTPService id="updateRepairCode" url="http://www.heritagemfg.com/console/flex/queries/updateRepairCode.cfm" useProxy="false" showBusyCursor="true"
                    result="getResultOk(2,event)" fault="getResultOk(999,event)">
        <mx:request>
            <mode>{mode}</mode>
            <id>{resultGrid.selectedItem.id}</id>
            <code>{code_fld.text}</code>
            <description>{description_ta.text}</description>
            <price>{price_fld.text}</price>
            <random>{parentDocument.makeRandom()}</random>
        </mx:request>
    </mx:HTTPService>
    <ns1:SuperPanel x="0" y="0" width="700" height="468"
                    layout="absolute" title="Repair Code Maintenance" showControls="true" enableResize="false"
                    exitFunction="parentApplication.removeModule" exitFunctionValue="{this.owner.name}" click="moveToFront();" id="superpanel1">
        <mx:Panel width="50%" height="418" layout="absolute" title="Code List"
                  id="panel1" left="10" top="10" defaultButton="{load_btn}">
            <mx:DataGrid width="90%" id="resultGrid" itemClick="gridItemSelected(event);" visible="true"
                         y="10" height="320" left="10">
                <mx:columns>
                    <mx:DataGridColumn headerText="ID" dataField="id" visible="false" width="55" />
                    <mx:DataGridColumn headerText="Code" dataField="code" width="75" />
                    <mx:DataGridColumn headerText="Description" dataField="description" />
                    <mx:DataGridColumn headerText="Price" dataField="price" width="55" textAlign="right"
                                       labelFunction="dataGridCurrencyFormat" />
                </mx:columns>
            </mx:DataGrid>
            <mx:ControlBar id="controlbar2" horizontalAlign="center">
                <mx:Button label="Print" click="runReport();" icon="{Images.printIcon}" />
                <mx:Button x="147" y="276" label="Load" id="load_btn"
                           icon="{Images.listIcon}" click="getCodes.send()" useHandCursor="true" buttonMode="true"
                           toolTip="Click here to List All Models" />
                <mx:Button label="Close" icon="{Images.closeIcon}" id="close_btn" click="{this.closeThisModule()}"
                           toolTip="Click here to close this window" useHandCursor="true" buttonMode="true" fontWeight="bold" />
            </mx:ControlBar>
        </mx:Panel>
        <!--A D D  /  E D I T   P A N E L -->
        <mx:Panel width="45%" height="232" layout="absolute" verticalScrollPolicy="off"
                  title="Add / Update / Delete Code" id="code_pnl" visible="true" horizontalScrollPolicy="off"
                  horizontalAlign="center" right="10" top="10">
            <mx:Text x="62" y="251" text="{resultGrid.selectedItem.id}" width="10"
                     id="id_fld" visible="false" />
            <mx:Form x="0" y="0" width="90%" height="100%">
                <mx:FormItem label="Code" fontWeight="bold" required="true">
                    <mx:TextInput id="code_fld" text="{resultGrid.selectedItem.code}" maxChars="25" width="156" />
                </mx:FormItem>
                <mx:FormItem label="Price" fontWeight="bold" required="true">
                    <mx:TextInput id="price_fld" text="{nf.format(resultGrid.selectedItem.price)}" maxChars="6" width="158" />
                </mx:FormItem>
                <mx:FormItem label="Description" fontWeight="bold" required="true">
                    <mx:TextArea id="description_ta" text="{resultGrid.selectedItem.description}" wordWrap="true" maxChars="200" />
                </mx:FormItem>
            </mx:Form>
            <mx:ControlBar id="controlbar1" horizontalAlign="center">
                <mx:Button label="Add" id="add_btn" toolTip="Click here to add a new Model" click="addRecord();"
                           useHandCursor="true" buttonMode="true" icon="{Images.addIcon}" labelPlacement="right"
                           width="68" fontSize="9" fontWeight="bold" />
                <mx:Button label="Save" id="save_btn" icon="{Images.saveIcon}" click="buttonHandler('save')"
                           toolTip="Click here to Save this Record" useHandCursor="true" buttonMode="true" labelPlacement="right"
                           width="68" fontSize="9" fontWeight="bold" />
                <mx:Button label="Delete" id="delete_btn" icon="{Images.removeIcon}" click="buttonHandler('delete')"
                           toolTip="Click here to Delete this Record" useHandCursor="true" buttonMode="true" labelPlacement="right"
                           width="79" fontSize="9" fontWeight="bold" />
            </mx:ControlBar>
        </mx:Panel>
    </ns1:SuperPanel>
</mx:Module>
